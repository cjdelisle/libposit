# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = tests/universal_posit8.test$(EXEEXT) \
	tests/universal_posit16.test$(EXEEXT) \
	tests/universal_posit32.test$(EXEEXT) \
	tests/universal_posit64.test$(EXEEXT) tests/math.test$(EXEEXT) \
	tests/rounding.test$(EXEEXT) tests/perf_measure$(EXEEXT) \
	tests/fuzz$(EXEEXT) tests/convert_toint$(EXEEXT) \
	tests/rounding/findmiddle$(EXEEXT)
TESTS = tests/rounding.test$(EXEEXT) tests/math.test$(EXEEXT) \
	tests/universal_posit16.test$(EXEEXT) \
	tests/universal_posit32.test$(EXEEXT) \
	tests/universal_posit64.test$(EXEEXT) \
	tests/universal_posit8.test$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libposit_a_AR = $(AR) $(ARFLAGS)
libposit_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libposit_a_OBJECTS = src/libposit.$(OBJEXT) \
	src/slow/slowposit.$(OBJEXT) src/softposit/e_pow.$(OBJEXT) \
	src/softposit/c_convertPosit8ToDec.$(OBJEXT) \
	src/softposit/c_convertPosit16ToDec.$(OBJEXT) \
	src/softposit/c_convertPosit32ToDec.$(OBJEXT) \
	src/softposit/c_convertDecToPosit8.$(OBJEXT) \
	src/softposit/c_convertDecToPosit16.$(OBJEXT) \
	src/softposit/c_convertDecToPosit32.$(OBJEXT) \
	src/softposit/p8_add.$(OBJEXT) src/softposit/p16_add.$(OBJEXT) \
	src/softposit/p32_add.$(OBJEXT) src/softposit/p8_sub.$(OBJEXT) \
	src/softposit/p16_sub.$(OBJEXT) \
	src/softposit/p32_sub.$(OBJEXT) \
	src/softposit/s_addMagsP8.$(OBJEXT) \
	src/softposit/s_addMagsP16.$(OBJEXT) \
	src/softposit/s_addMagsP32.$(OBJEXT) \
	src/softposit/s_subMagsP8.$(OBJEXT) \
	src/softposit/s_subMagsP16.$(OBJEXT) \
	src/softposit/s_subMagsP32.$(OBJEXT) \
	src/softposit/p8_mul.$(OBJEXT) src/softposit/p16_mul.$(OBJEXT) \
	src/softposit/p32_mul.$(OBJEXT) src/softposit/p8_div.$(OBJEXT) \
	src/softposit/p16_div.$(OBJEXT) \
	src/softposit/p32_div.$(OBJEXT) \
	src/softposit/p8_sqrt.$(OBJEXT) \
	src/softposit/p16_sqrt.$(OBJEXT) \
	src/softposit/p32_sqrt.$(OBJEXT) \
	src/softposit/s_approxRecipSqrt_1Ks.$(OBJEXT) \
	src/softposit/i32_to_p8.$(OBJEXT) \
	src/softposit/i32_to_p16.$(OBJEXT) \
	src/softposit/i32_to_p32.$(OBJEXT) \
	src/softposit/ui32_to_p8.$(OBJEXT) \
	src/softposit/ui32_to_p16.$(OBJEXT) \
	src/softposit/ui32_to_p32.$(OBJEXT) \
	src/softposit/i64_to_p8.$(OBJEXT) \
	src/softposit/i64_to_p16.$(OBJEXT) \
	src/softposit/i64_to_p32.$(OBJEXT) \
	src/softposit/ui64_to_p8.$(OBJEXT) \
	src/softposit/ui64_to_p16.$(OBJEXT) \
	src/softposit/ui64_to_p32.$(OBJEXT) \
	src/softposit/p8_to_i32.$(OBJEXT) \
	src/softposit/p16_to_i32.$(OBJEXT) \
	src/softposit/p32_to_i32.$(OBJEXT) \
	src/softposit/p8_to_ui32.$(OBJEXT) \
	src/softposit/p16_to_ui32.$(OBJEXT) \
	src/softposit/p32_to_ui32.$(OBJEXT) \
	src/softposit/p8_to_i64.$(OBJEXT) \
	src/softposit/p16_to_i64.$(OBJEXT) \
	src/softposit/p32_to_i64.$(OBJEXT) \
	src/softposit/p8_to_ui64.$(OBJEXT) \
	src/softposit/p16_to_ui64.$(OBJEXT) \
	src/softposit/p32_to_ui64.$(OBJEXT) \
	src/softposit/p8_to_p16.$(OBJEXT) \
	src/softposit/p8_to_p32.$(OBJEXT) \
	src/softposit/p16_to_p8.$(OBJEXT) \
	src/softposit/p16_to_p32.$(OBJEXT) \
	src/softposit/p32_to_p8.$(OBJEXT) \
	src/softposit/p32_to_p16.$(OBJEXT) src/cjd/impl.$(OBJEXT)
libposit_a_OBJECTS = $(am_libposit_a_OBJECTS)
libtestutil_a_AR = $(AR) $(ARFLAGS)
libtestutil_a_LIBADD =
am_libtestutil_a_OBJECTS = src/test/util/allimpls.$(OBJEXT)
libtestutil_a_OBJECTS = $(am_libtestutil_a_OBJECTS)
PROGRAMS = $(bin_PROGRAMS)
am_tests_convert_toint_OBJECTS = src/test/convert/toint.$(OBJEXT)
tests_convert_toint_OBJECTS = $(am_tests_convert_toint_OBJECTS)
am__DEPENDENCIES_1 =
tests_convert_toint_DEPENDENCIES = libtestutil.a libposit.a \
	$(am__DEPENDENCIES_1)
am_tests_fuzz_OBJECTS = src/test/fuzz/fuzz.$(OBJEXT)
tests_fuzz_OBJECTS = $(am_tests_fuzz_OBJECTS)
tests_fuzz_DEPENDENCIES = libtestutil.a libposit.a \
	$(am__DEPENDENCIES_1)
am_tests_math_test_OBJECTS = src/test/math/mathtest.$(OBJEXT)
tests_math_test_OBJECTS = $(am_tests_math_test_OBJECTS)
tests_math_test_DEPENDENCIES = libtestutil.a libposit.a \
	$(am__DEPENDENCIES_1)
am_tests_perf_measure_OBJECTS = src/test/perf_measure.$(OBJEXT)
tests_perf_measure_OBJECTS = $(am_tests_perf_measure_OBJECTS)
tests_perf_measure_DEPENDENCIES = libtestutil.a libposit.a \
	$(am__DEPENDENCIES_1)
am_tests_rounding_test_OBJECTS =  \
	src/test/rounding/roundingtest.$(OBJEXT)
tests_rounding_test_OBJECTS = $(am_tests_rounding_test_OBJECTS)
tests_rounding_test_DEPENDENCIES = libtestutil.a libposit.a \
	$(am__DEPENDENCIES_1)
am_tests_rounding_findmiddle_OBJECTS =  \
	src/test/rounding/findmiddle.$(OBJEXT)
tests_rounding_findmiddle_OBJECTS =  \
	$(am_tests_rounding_findmiddle_OBJECTS)
tests_rounding_findmiddle_DEPENDENCIES = libtestutil.a libposit.a \
	$(am__DEPENDENCIES_1)
am_tests_universal_posit16_test_OBJECTS =  \
	src/test/universal/posit16.$(OBJEXT)
tests_universal_posit16_test_OBJECTS =  \
	$(am_tests_universal_posit16_test_OBJECTS)
tests_universal_posit16_test_DEPENDENCIES = libtestutil.a libposit.a \
	$(am__DEPENDENCIES_1)
am_tests_universal_posit32_test_OBJECTS =  \
	src/test/universal/posit32.$(OBJEXT)
tests_universal_posit32_test_OBJECTS =  \
	$(am_tests_universal_posit32_test_OBJECTS)
tests_universal_posit32_test_DEPENDENCIES = libtestutil.a libposit.a \
	$(am__DEPENDENCIES_1)
am_tests_universal_posit64_test_OBJECTS =  \
	src/test/universal/posit64.$(OBJEXT)
tests_universal_posit64_test_OBJECTS =  \
	$(am_tests_universal_posit64_test_OBJECTS)
tests_universal_posit64_test_DEPENDENCIES = libtestutil.a libposit.a \
	$(am__DEPENDENCIES_1)
am_tests_universal_posit8_test_OBJECTS =  \
	src/test/universal/posit8.$(OBJEXT)
tests_universal_posit8_test_OBJECTS =  \
	$(am_tests_universal_posit8_test_OBJECTS)
tests_universal_posit8_test_DEPENDENCIES = libtestutil.a libposit.a \
	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libposit_a_SOURCES) $(libtestutil_a_SOURCES) \
	$(tests_convert_toint_SOURCES) $(tests_fuzz_SOURCES) \
	$(tests_math_test_SOURCES) $(tests_perf_measure_SOURCES) \
	$(tests_rounding_test_SOURCES) \
	$(tests_rounding_findmiddle_SOURCES) \
	$(tests_universal_posit16_test_SOURCES) \
	$(tests_universal_posit32_test_SOURCES) \
	$(tests_universal_posit64_test_SOURCES) \
	$(tests_universal_posit8_test_SOURCES)
DIST_SOURCES = $(libposit_a_SOURCES) $(libtestutil_a_SOURCES) \
	$(tests_convert_toint_SOURCES) $(tests_fuzz_SOURCES) \
	$(tests_math_test_SOURCES) $(tests_perf_measure_SOURCES) \
	$(tests_rounding_test_SOURCES) \
	$(tests_rounding_findmiddle_SOURCES) \
	$(tests_universal_posit16_test_SOURCES) \
	$(tests_universal_posit32_test_SOURCES) \
	$(tests_universal_posit64_test_SOURCES) \
	$(tests_universal_posit8_test_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in compile \
	depcomp install-sh missing test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.bz2
GZIP_ENV = --best
DIST_TARGETS = dist-bzip2 dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@

# what flags you want to pass to the C compiler & linker
CFLAGS = \
	-pedantic \
	-Wall \
	-Wextra \
	-Wno-pointer-sign \
	-Wno-unused-parameter \
	-std=c11 \
	-g \
	-O0 -march=native \
	-Werror -Igenerated -Isrc \
	${mpfr_CFLAGS}

CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
mpfr_CFLAGS = @mpfr_CFLAGS@
mpfr_LIBS = @mpfr_LIBS@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LIBRARIES = libposit.a libtestutil.a

# slow impl

# softposit impl

# cjd impl
libposit_a_SOURCES = Makefile src/libposit.c src/slow/impl.h \
	src/slow/macros.h src/slow/mpz_macros.h src/slow/slowposit.c \
	src/softposit/impl.h src/softposit/softposit.h \
	src/softposit/softposit_types.h src/softposit/primitives.h \
	src/softposit/platform.h src/softposit/internals.h \
	src/softposit/e_pow.c src/softposit/c_convertPosit8ToDec.c \
	src/softposit/c_convertPosit16ToDec.c \
	src/softposit/c_convertPosit32ToDec.c \
	src/softposit/c_convertDecToPosit8.c \
	src/softposit/c_convertDecToPosit16.c \
	src/softposit/c_convertDecToPosit32.c src/softposit/p8_add.c \
	src/softposit/p16_add.c src/softposit/p32_add.c \
	src/softposit/p8_sub.c src/softposit/p16_sub.c \
	src/softposit/p32_sub.c src/softposit/s_addMagsP8.c \
	src/softposit/s_addMagsP16.c src/softposit/s_addMagsP32.c \
	src/softposit/s_subMagsP8.c src/softposit/s_subMagsP16.c \
	src/softposit/s_subMagsP32.c src/softposit/p8_mul.c \
	src/softposit/p16_mul.c src/softposit/p32_mul.c \
	src/softposit/p8_div.c src/softposit/p16_div.c \
	src/softposit/p32_div.c src/softposit/p8_sqrt.c \
	src/softposit/p16_sqrt.c src/softposit/p32_sqrt.c \
	src/softposit/s_approxRecipSqrt_1Ks.c \
	src/softposit/i32_to_p8.c src/softposit/i32_to_p16.c \
	src/softposit/i32_to_p32.c src/softposit/ui32_to_p8.c \
	src/softposit/ui32_to_p16.c src/softposit/ui32_to_p32.c \
	src/softposit/i64_to_p8.c src/softposit/i64_to_p16.c \
	src/softposit/i64_to_p32.c src/softposit/ui64_to_p8.c \
	src/softposit/ui64_to_p16.c src/softposit/ui64_to_p32.c \
	src/softposit/p8_to_i32.c src/softposit/p16_to_i32.c \
	src/softposit/p32_to_i32.c src/softposit/p8_to_ui32.c \
	src/softposit/p16_to_ui32.c src/softposit/p32_to_ui32.c \
	src/softposit/p8_to_i64.c src/softposit/p16_to_i64.c \
	src/softposit/p32_to_i64.c src/softposit/p8_to_ui64.c \
	src/softposit/p16_to_ui64.c src/softposit/p32_to_ui64.c \
	src/softposit/p8_to_p16.c src/softposit/p8_to_p32.c \
	src/softposit/p16_to_p8.c src/softposit/p16_to_p32.c \
	src/softposit/p32_to_p8.c src/softposit/p32_to_p16.c \
	src/cjd/impl.h src/cjd/impl.c
libtestutil_a_SOURCES = Makefile \
	src/test/util/allimpls.c \
	src/test/util/allimpls.h

tests_universal_posit8_test_SOURCES = Makefile \
	src/test/universal/posit8.c

tests_universal_posit8_test_LDADD = libtestutil.a libposit.a ${mpfr_LIBS} -lm
tests_universal_posit16_test_SOURCES = Makefile \
	src/test/universal/posit16.c

tests_universal_posit16_test_LDADD = libtestutil.a libposit.a ${mpfr_LIBS} -lm
tests_universal_posit32_test_SOURCES = Makefile \
	src/test/universal/posit32.c

tests_universal_posit32_test_LDADD = libtestutil.a libposit.a ${mpfr_LIBS} -lm
tests_universal_posit64_test_SOURCES = Makefile \
	src/test/universal/posit64.c

tests_universal_posit64_test_LDADD = libtestutil.a libposit.a ${mpfr_LIBS} -lm
tests_math_test_SOURCES = Makefile \
	src/test/math/mathtest.c \
	src/test/math/mathtest.h \
	src/test/math/mathhdr.h

tests_math_test_LDADD = libtestutil.a libposit.a ${mpfr_LIBS}
tests_rounding_test_SOURCES = Makefile \
	src/slow/mpz_macros.h \
	src/test/rounding/posit_macros_impl.h \
	src/test/rounding/roundingtest.c

tests_rounding_test_LDADD = libtestutil.a libposit.a ${mpfr_LIBS}
tests_perf_measure_SOURCES = Makefile \
	src/test/perf_measure.c

tests_perf_measure_LDADD = libtestutil.a libposit.a ${mpfr_LIBS}
tests_fuzz_SOURCES = Makefile \
	src/test/fuzz/fuzz.c

tests_fuzz_LDADD = libtestutil.a libposit.a ${mpfr_LIBS}
tests_convert_toint_SOURCES = Makefile \
	src/test/convert/toint.c

tests_convert_toint_LDADD = libtestutil.a libposit.a ${mpfr_LIBS}
tests_rounding_findmiddle_SOURCES = Makefile \
	src/test/rounding/findmiddle.c

tests_rounding_findmiddle_LDADD = libtestutil.a libposit.a ${mpfr_LIBS}
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/libposit.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/slow/$(am__dirstamp):
	@$(MKDIR_P) src/slow
	@: > src/slow/$(am__dirstamp)
src/slow/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/slow/$(DEPDIR)
	@: > src/slow/$(DEPDIR)/$(am__dirstamp)
src/slow/slowposit.$(OBJEXT): src/slow/$(am__dirstamp) \
	src/slow/$(DEPDIR)/$(am__dirstamp)
src/softposit/$(am__dirstamp):
	@$(MKDIR_P) src/softposit
	@: > src/softposit/$(am__dirstamp)
src/softposit/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/softposit/$(DEPDIR)
	@: > src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/e_pow.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/c_convertPosit8ToDec.$(OBJEXT):  \
	src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/c_convertPosit16ToDec.$(OBJEXT):  \
	src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/c_convertPosit32ToDec.$(OBJEXT):  \
	src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/c_convertDecToPosit8.$(OBJEXT):  \
	src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/c_convertDecToPosit16.$(OBJEXT):  \
	src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/c_convertDecToPosit32.$(OBJEXT):  \
	src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_add.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_add.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_add.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_sub.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_sub.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_sub.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/s_addMagsP8.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/s_addMagsP16.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/s_addMagsP32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/s_subMagsP8.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/s_subMagsP16.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/s_subMagsP32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_mul.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_mul.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_mul.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_div.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_div.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_div.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_sqrt.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_sqrt.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_sqrt.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/s_approxRecipSqrt_1Ks.$(OBJEXT):  \
	src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/i32_to_p8.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/i32_to_p16.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/i32_to_p32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/ui32_to_p8.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/ui32_to_p16.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/ui32_to_p32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/i64_to_p8.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/i64_to_p16.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/i64_to_p32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/ui64_to_p8.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/ui64_to_p16.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/ui64_to_p32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_to_i32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_to_i32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_to_i32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_to_ui32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_to_ui32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_to_ui32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_to_i64.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_to_i64.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_to_i64.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_to_ui64.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_to_ui64.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_to_ui64.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_to_p16.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p8_to_p32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_to_p8.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p16_to_p32.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_to_p8.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/softposit/p32_to_p16.$(OBJEXT): src/softposit/$(am__dirstamp) \
	src/softposit/$(DEPDIR)/$(am__dirstamp)
src/cjd/$(am__dirstamp):
	@$(MKDIR_P) src/cjd
	@: > src/cjd/$(am__dirstamp)
src/cjd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/cjd/$(DEPDIR)
	@: > src/cjd/$(DEPDIR)/$(am__dirstamp)
src/cjd/impl.$(OBJEXT): src/cjd/$(am__dirstamp) \
	src/cjd/$(DEPDIR)/$(am__dirstamp)

libposit.a: $(libposit_a_OBJECTS) $(libposit_a_DEPENDENCIES) $(EXTRA_libposit_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libposit.a
	$(AM_V_AR)$(libposit_a_AR) libposit.a $(libposit_a_OBJECTS) $(libposit_a_LIBADD)
	$(AM_V_at)$(RANLIB) libposit.a
src/test/util/$(am__dirstamp):
	@$(MKDIR_P) src/test/util
	@: > src/test/util/$(am__dirstamp)
src/test/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/test/util/$(DEPDIR)
	@: > src/test/util/$(DEPDIR)/$(am__dirstamp)
src/test/util/allimpls.$(OBJEXT): src/test/util/$(am__dirstamp) \
	src/test/util/$(DEPDIR)/$(am__dirstamp)

libtestutil.a: $(libtestutil_a_OBJECTS) $(libtestutil_a_DEPENDENCIES) $(EXTRA_libtestutil_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libtestutil.a
	$(AM_V_AR)$(libtestutil_a_AR) libtestutil.a $(libtestutil_a_OBJECTS) $(libtestutil_a_LIBADD)
	$(AM_V_at)$(RANLIB) libtestutil.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
src/test/convert/$(am__dirstamp):
	@$(MKDIR_P) src/test/convert
	@: > src/test/convert/$(am__dirstamp)
src/test/convert/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/test/convert/$(DEPDIR)
	@: > src/test/convert/$(DEPDIR)/$(am__dirstamp)
src/test/convert/toint.$(OBJEXT): src/test/convert/$(am__dirstamp) \
	src/test/convert/$(DEPDIR)/$(am__dirstamp)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)

tests/convert_toint$(EXEEXT): $(tests_convert_toint_OBJECTS) $(tests_convert_toint_DEPENDENCIES) $(EXTRA_tests_convert_toint_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/convert_toint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_convert_toint_OBJECTS) $(tests_convert_toint_LDADD) $(LIBS)
src/test/fuzz/$(am__dirstamp):
	@$(MKDIR_P) src/test/fuzz
	@: > src/test/fuzz/$(am__dirstamp)
src/test/fuzz/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/test/fuzz/$(DEPDIR)
	@: > src/test/fuzz/$(DEPDIR)/$(am__dirstamp)
src/test/fuzz/fuzz.$(OBJEXT): src/test/fuzz/$(am__dirstamp) \
	src/test/fuzz/$(DEPDIR)/$(am__dirstamp)

tests/fuzz$(EXEEXT): $(tests_fuzz_OBJECTS) $(tests_fuzz_DEPENDENCIES) $(EXTRA_tests_fuzz_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/fuzz$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_fuzz_OBJECTS) $(tests_fuzz_LDADD) $(LIBS)
src/test/math/$(am__dirstamp):
	@$(MKDIR_P) src/test/math
	@: > src/test/math/$(am__dirstamp)
src/test/math/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/test/math/$(DEPDIR)
	@: > src/test/math/$(DEPDIR)/$(am__dirstamp)
src/test/math/mathtest.$(OBJEXT): src/test/math/$(am__dirstamp) \
	src/test/math/$(DEPDIR)/$(am__dirstamp)

tests/math.test$(EXEEXT): $(tests_math_test_OBJECTS) $(tests_math_test_DEPENDENCIES) $(EXTRA_tests_math_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/math.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_math_test_OBJECTS) $(tests_math_test_LDADD) $(LIBS)
src/test/$(am__dirstamp):
	@$(MKDIR_P) src/test
	@: > src/test/$(am__dirstamp)
src/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/test/$(DEPDIR)
	@: > src/test/$(DEPDIR)/$(am__dirstamp)
src/test/perf_measure.$(OBJEXT): src/test/$(am__dirstamp) \
	src/test/$(DEPDIR)/$(am__dirstamp)

tests/perf_measure$(EXEEXT): $(tests_perf_measure_OBJECTS) $(tests_perf_measure_DEPENDENCIES) $(EXTRA_tests_perf_measure_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/perf_measure$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_perf_measure_OBJECTS) $(tests_perf_measure_LDADD) $(LIBS)
src/test/rounding/$(am__dirstamp):
	@$(MKDIR_P) src/test/rounding
	@: > src/test/rounding/$(am__dirstamp)
src/test/rounding/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/test/rounding/$(DEPDIR)
	@: > src/test/rounding/$(DEPDIR)/$(am__dirstamp)
src/test/rounding/roundingtest.$(OBJEXT):  \
	src/test/rounding/$(am__dirstamp) \
	src/test/rounding/$(DEPDIR)/$(am__dirstamp)

tests/rounding.test$(EXEEXT): $(tests_rounding_test_OBJECTS) $(tests_rounding_test_DEPENDENCIES) $(EXTRA_tests_rounding_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/rounding.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_rounding_test_OBJECTS) $(tests_rounding_test_LDADD) $(LIBS)
src/test/rounding/findmiddle.$(OBJEXT):  \
	src/test/rounding/$(am__dirstamp) \
	src/test/rounding/$(DEPDIR)/$(am__dirstamp)
tests/rounding/$(am__dirstamp):
	@$(MKDIR_P) tests/rounding
	@: > tests/rounding/$(am__dirstamp)

tests/rounding/findmiddle$(EXEEXT): $(tests_rounding_findmiddle_OBJECTS) $(tests_rounding_findmiddle_DEPENDENCIES) $(EXTRA_tests_rounding_findmiddle_DEPENDENCIES) tests/rounding/$(am__dirstamp)
	@rm -f tests/rounding/findmiddle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_rounding_findmiddle_OBJECTS) $(tests_rounding_findmiddle_LDADD) $(LIBS)
src/test/universal/$(am__dirstamp):
	@$(MKDIR_P) src/test/universal
	@: > src/test/universal/$(am__dirstamp)
src/test/universal/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/test/universal/$(DEPDIR)
	@: > src/test/universal/$(DEPDIR)/$(am__dirstamp)
src/test/universal/posit16.$(OBJEXT):  \
	src/test/universal/$(am__dirstamp) \
	src/test/universal/$(DEPDIR)/$(am__dirstamp)

tests/universal_posit16.test$(EXEEXT): $(tests_universal_posit16_test_OBJECTS) $(tests_universal_posit16_test_DEPENDENCIES) $(EXTRA_tests_universal_posit16_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/universal_posit16.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_universal_posit16_test_OBJECTS) $(tests_universal_posit16_test_LDADD) $(LIBS)
src/test/universal/posit32.$(OBJEXT):  \
	src/test/universal/$(am__dirstamp) \
	src/test/universal/$(DEPDIR)/$(am__dirstamp)

tests/universal_posit32.test$(EXEEXT): $(tests_universal_posit32_test_OBJECTS) $(tests_universal_posit32_test_DEPENDENCIES) $(EXTRA_tests_universal_posit32_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/universal_posit32.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_universal_posit32_test_OBJECTS) $(tests_universal_posit32_test_LDADD) $(LIBS)
src/test/universal/posit64.$(OBJEXT):  \
	src/test/universal/$(am__dirstamp) \
	src/test/universal/$(DEPDIR)/$(am__dirstamp)

tests/universal_posit64.test$(EXEEXT): $(tests_universal_posit64_test_OBJECTS) $(tests_universal_posit64_test_DEPENDENCIES) $(EXTRA_tests_universal_posit64_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/universal_posit64.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_universal_posit64_test_OBJECTS) $(tests_universal_posit64_test_LDADD) $(LIBS)
src/test/universal/posit8.$(OBJEXT):  \
	src/test/universal/$(am__dirstamp) \
	src/test/universal/$(DEPDIR)/$(am__dirstamp)

tests/universal_posit8.test$(EXEEXT): $(tests_universal_posit8_test_OBJECTS) $(tests_universal_posit8_test_DEPENDENCIES) $(EXTRA_tests_universal_posit8_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/universal_posit8.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_universal_posit8_test_OBJECTS) $(tests_universal_posit8_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)
	-rm -f src/cjd/*.$(OBJEXT)
	-rm -f src/slow/*.$(OBJEXT)
	-rm -f src/softposit/*.$(OBJEXT)
	-rm -f src/test/*.$(OBJEXT)
	-rm -f src/test/convert/*.$(OBJEXT)
	-rm -f src/test/fuzz/*.$(OBJEXT)
	-rm -f src/test/math/*.$(OBJEXT)
	-rm -f src/test/rounding/*.$(OBJEXT)
	-rm -f src/test/universal/*.$(OBJEXT)
	-rm -f src/test/util/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libposit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/cjd/$(DEPDIR)/impl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/slow/$(DEPDIR)/slowposit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/c_convertDecToPosit16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/c_convertDecToPosit32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/c_convertDecToPosit8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/c_convertPosit16ToDec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/c_convertPosit32ToDec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/c_convertPosit8ToDec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/e_pow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/i32_to_p16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/i32_to_p32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/i32_to_p8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/i64_to_p16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/i64_to_p32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/i64_to_p8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_add.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_div.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_mul.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_sqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_sub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_to_i32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_to_i64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_to_p32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_to_p8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_to_ui32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p16_to_ui64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_add.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_div.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_mul.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_sqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_sub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_to_i32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_to_i64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_to_p16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_to_p8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_to_ui32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p32_to_ui64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_add.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_div.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_mul.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_sqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_sub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_to_i32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_to_i64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_to_p16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_to_p32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_to_ui32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/p8_to_ui64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/s_addMagsP16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/s_addMagsP32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/s_addMagsP8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/s_approxRecipSqrt_1Ks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/s_subMagsP16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/s_subMagsP32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/s_subMagsP8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/ui32_to_p16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/ui32_to_p32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/ui32_to_p8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/ui64_to_p16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/ui64_to_p32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/softposit/$(DEPDIR)/ui64_to_p8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/$(DEPDIR)/perf_measure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/convert/$(DEPDIR)/toint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/fuzz/$(DEPDIR)/fuzz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/math/$(DEPDIR)/mathtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/rounding/$(DEPDIR)/findmiddle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/rounding/$(DEPDIR)/roundingtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/universal/$(DEPDIR)/posit16.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/universal/$(DEPDIR)/posit32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/universal/$(DEPDIR)/posit64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/universal/$(DEPDIR)/posit8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/test/util/$(DEPDIR)/allimpls.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)
dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src/cjd/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/cjd/$(am__dirstamp)
	-rm -f src/slow/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/slow/$(am__dirstamp)
	-rm -f src/softposit/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/softposit/$(am__dirstamp)
	-rm -f src/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/test/$(am__dirstamp)
	-rm -f src/test/convert/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/test/convert/$(am__dirstamp)
	-rm -f src/test/fuzz/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/test/fuzz/$(am__dirstamp)
	-rm -f src/test/math/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/test/math/$(am__dirstamp)
	-rm -f src/test/rounding/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/test/rounding/$(am__dirstamp)
	-rm -f src/test/universal/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/test/universal/$(am__dirstamp)
	-rm -f src/test/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/test/util/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)
	-rm -f tests/rounding/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf src/$(DEPDIR) src/cjd/$(DEPDIR) src/slow/$(DEPDIR) src/softposit/$(DEPDIR) src/test/$(DEPDIR) src/test/convert/$(DEPDIR) src/test/fuzz/$(DEPDIR) src/test/math/$(DEPDIR) src/test/rounding/$(DEPDIR) src/test/universal/$(DEPDIR) src/test/util/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf src/$(DEPDIR) src/cjd/$(DEPDIR) src/slow/$(DEPDIR) src/softposit/$(DEPDIR) src/test/$(DEPDIR) src/test/convert/$(DEPDIR) src/test/fuzz/$(DEPDIR) src/test/math/$(DEPDIR) src/test/rounding/$(DEPDIR) src/test/universal/$(DEPDIR) src/test/util/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLIBRARIES

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-binPROGRAMS clean-cscope clean-generic \
	clean-libLIBRARIES cscope cscopelist-am ctags ctags-am dist \
	dist-all dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLIBRARIES

.PRECIOUS: Makefile


#-fsanitize=address -lasan

define posit_preprocess
	$(AM_V_CC)$(CC) -E -P -I./src src/templates/gen_$1 -o generated/$1.0
	$(AM_V_at)$(AWK) '{gsub(/LITERAL\(\\n\)/,"\n",$$0);print$$0}' < generated/$1.0 > generated/$1.1
	$(AM_V_at)$(SED) 's/LITERAL(\([^)]*\))/\1/g' < generated/$1.1 > generated/$1
	$(AM_V_at)-rm generated/$1.0 generated/$1.1
endef

generated/.posit_dirstamp:
	mkdir generated
	mkdir generated/fuzz_outputs
	touch generated/.posit_dirstamp
generated/posit.h: src/templates/gen_posit.h src/templates/macros.h src/templates/main.h generated/.posit_dirstamp Makefile
	$(call posit_preprocess,posit.h)
generated/positgen.h: src/templates/gen_positgen.h src/templates/macros.h src/templates/main.h generated/.posit_dirstamp Makefile
	$(call posit_preprocess,positgen.h)
generated/slowimpl.h: src/templates/gen_slowimpl.h src/templates/macros.h src/templates/main.h generated/.posit_dirstamp Makefile
	$(call posit_preprocess,slowimpl.h)
generated/useslow.h: src/templates/gen_useslow.h src/templates/macros.h src/templates/main.h generated/.posit_dirstamp Makefile
	$(call posit_preprocess,useslow.h)
generated/implement_posit.h: src/templates/gen_implement_posit.h src/templates/macros.h src/templates/main.h generated/.posit_dirstamp Makefile
	$(call posit_preprocess,implement_posit.h)
generated/enumerate_implementations.h: src/templates/gen_enumerate_implementations.h src/templates/macros.h src/templates/main.h generated/.posit_dirstamp Makefile
	$(call posit_preprocess,enumerate_implementations.h)
generated/useall.h: src/templates/gen_useall.h src/templates/macros.h src/templates/main.h generated/.posit_dirstamp Makefile
	$(call posit_preprocess,useall.h)
src/libposit.c: generated/posit.h \
	generated/slowimpl.h \
	generated/useslow.h \
	generated/positgen.h \
	generated/implement_posit.h
src/slow/slowposit.c: generated/posit.h generated/implement_posit.h
src/softposit/e_pow.c: generated/posit.h generated/implement_posit.h
src/cjd/impl.c: generated/posit.h generated/implement_posit.h
src/test/util/allimpls.c: generated/posit.h generated/enumerate_implementations.h generated/useall.h
src/test/universal/posit8.c: generated/posit.h
src/test/universal/posit16.c: generated/posit.h
src/test/universal/posit32.c: generated/posit.h
src/test/universal/posit64.c: generated/posit.h
src/test/math/mathtest.c: generated/posit.h
src/test/rounding/roundingtest.c: generated/posit.h
src/test/perf_measure.c: generated/posit.h
src/test/perf_measure.c: generated/posit.h
src/test/perf_measure.c: generated/posit.h
src/test/rounding/findmiddle.c: generated/posit.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
